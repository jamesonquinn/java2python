module java/pp2py/helpers

strategies

/**
 * Creates a block structure for a list of boxes.
 *
 * @type (Int, List(Box)) -> Box
 * @todo Use the integer of the lhs as the value of vs
 */
rules

  block-structure : /* box |[ V is=1 vs=1 [~*elems] ]| */
    (1, elems) ->  box |[ V vs=0 [H hs=3 [" " V vs=0 [~*elems]]] ]|
    where
      not(!elems => [])

  block-structure :
    (0, elems) -> box |[ V vs=0 [H hs=3 [" " V vs=0 [V vs=0 [~*elems]]]] ]|
    where
      not(!elems => [])

  block-structure :
    (_, []) -> box |[ V ["    pass"] ]|

/**
 * @todo What is this doing here???
 */
rules

  java-to-box :
    SuperDec(c) -> box |[ H hs=1 [ ~c] ]|

  java-to-box :
    ImplementsDec(is) -> box |[ H hs=1 [KW["#implementsDec"] ~interfaces] ]|
      where <separate-by-comma> is; ?interfaces

  java-to-box :
    ExtendsInterfaces(is) -> box |[ H hs=1 [KW["#extendsInterfaces"] ~interfaces] ]|
      where <separate-by-comma> is; ?interfaces

rules

  hbox = 
      ( is-list < id + ![<id>])
    ; !box |[ H hs=0 [ ~*<id> ] ]|

  comma = 
    !box |[ "," ]|

  point = 
    !box |[ "." ]|


/**
 * Rewrites a list of boxes to a single box, where the elements are
 * separated by commas and between parenthesis.
 *
 * @type List(Box) -> Box
 */
rules

  list-to-args :
    [] -> box |[ H hs=0 ["(" ")"] ]|

  list-to-args :
    exprs@[_ | _ ] -> box |[ H hs=0 ["(" ~args ")"] ]|
    where
      <separate-by-comma> exprs => args

  list-to-args2 :
    [] -> box |[ H hs=0 [] ]|

  list-to-args2 :
    exprs@[_ | _ ] -> box |[ H hs=0 [ ~args ] ]|
    where
      <separate-by-comma> exprs => args

  list-to-args3 :
    [] -> box |[ H hs=0 ["(self)"] ]|

  list-to-args3 :
    exprs@[_ | _ ] -> box |[ H hs=0 [ "(self, " ~args ")" ] ]|
    where
      <separate-by-comma> exprs => args


/*
  list-to-args3 :
    exprs@[_ | _ ] -> box |[ H hs=0 [ ~args ] ]|
    where
      <separate-by-comma> ( <conc> ( box |[ H hs=0 [ "self" ] ]| , exprs) ) => args
*/

rules

  /**
   * Rewrites a list of boxes to a single box, where the elements are
   * separated by commas.
   *
   * @type List(Box) -> Box
   */
  separate-by-comma =
    rec x(
      ?[<id>]
    <+ \ [] -> H hs=0 [] \
    <+ {b1, b2:
         ?[b1 | <x>]
       ; ?b2
       ; !H hs=1 [H hs=0 [b1 ","] b2]
       }
    )
